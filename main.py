import aiogram.utils.markdown as md
from aiogram import Bot, Dispatcher, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import ParseMode, WebAppInfo
from aiogram.utils import executor
from aiogram.types import ReplyKeyboardRemove, \
    ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardMarkup, InlineKeyboardButton, \
    CallbackQuery, message
from aiogram.utils.executor import start_webhook
from aiogram.contrib.middlewares.logging import LoggingMiddleware
import config
import database as db
from aiogram_broadcaster import MessageBroadcaster
from typing import List, Union
from aiogram.dispatcher.handler import CancelHandler
from aiogram.dispatcher.middlewares import BaseMiddleware
from datetime import datetime, date
from aiogram.types import ChatActions
import asyncio
import requests
import os
from urllib.parse import urlencode

bot = Bot(token=config.token, parse_mode='HTML')
dp = Dispatcher(bot, storage=MemoryStorage())

class Form(StatesGroup):
    name = State()
    college = State()
    age = State()
    gender = State()
    city = State()
    bio = State()
    images = State()
    edit = State()
    edit_name = State()
    edit_age = State()
    edit_city = State()
    edit_description = State()
    edit_college = State()
    edit_anket = State()
    get_reaction = State()
    get_answer_reaction = State()

main_kb = ReplyKeyboardMarkup(resize_keyboard=True)
main_kb.add(KeyboardButton('–°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã‚úåÔ∏è'), KeyboardButton('–ú–æ—è –∞–Ω–∫–µ—Ç–∞üë§'))
main_kb.add('–ú–æ–∏ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –∑–∞—è–≤–∫–∏ü§©')

async def render_edit_kb(user_id):
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add(KeyboardButton('–°–æ—Ö—Ä–∞–Ω–∏—Ç—å'), KeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å'))
    return kb
    
@dp.message_handler(commands=['start'])
async def start_handler(message,  state: FSMContext):
    req = await db.add_user(message.from_user.id, message.from_user.username)
    if req == 'succes create user':
        await bot.send_message(message.chat.id, '<b>–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤ –Ω–∞ –∫–æ–Ω–∫—É—Ä—Å–µ –í–û–õ–ù–ï–ù–ò–ï</b>.\n–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?:')
        await Form.name.set()
    else:
        await bot.send_message(message.chat.id, '–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é', reply_markup=main_kb)

@dp.message_handler(state=Form.name)
async def get_name(message, state: FSMContext):
    await db.change_name(message.from_user.id, message.text)
    await message.reply("<b>–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è!üòÅ</b>\n–ò–∑ –∫–∞–∫–æ–≥–æ —Ç—ã —É—á–µ–±–Ω–æ–≥–æ —É—á—Ä–µ–∂–¥–µ–Ω–∏—è?\n<i>*–ï—Å–ª–∏ —Ç—ã –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä/–∫—É—Ä–∞—Ç–æ—Ä –∫–æ–º–∞–Ω–¥—ã, –Ω–∞–ø–∏—à–∏ –∏–∑ –∫–∞–∫–æ–≥–æ —Ç—ã –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è</i>")#–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è!üòÅ</b>\n
    await Form.college.set()

@dp.message_handler(state=Form.college)
async def get_college(message, state: FSMContext):
    await db.change_college(message.from_user.id, message.text)
    await message.reply('<b>–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?</b>')
    await Form.age.set()

@dp.message_handler(state=Form.age)
async def get_age(message, state: FSMContext):
    if message.text.isdigit():
        await db.change_age(message.chat.id, message.text)
        await message.reply('–í—ã–±–µ—Ä–∏ —Å–≤–æ–π –ø–æ–ª', reply_markup=ReplyKeyboardMarkup(resize_keyboard=True).add(KeyboardButton('–ú—É–∂—Å–∫–æ–πüë®üèª'), KeyboardButton('–ñ–µ–Ω—Å–∫–∏–πüë©üèª‚Äçü¶∞')))
        await Form.gender.set()
    else:
        await message.reply('–ù–∞–ø–∏—à–∏ –≤–æ–∑—Ä–∞—Å—Ç <b>—á–∏—Å–ª–æ–º</b>')

@dp.message_handler(state=Form.gender)
async def get_gender(message, state: FSMContext):
    if message.text == "–ú—É–∂—Å–∫–æ–πüë®üèª":
        await db.change_gender(message.from_user.id, 1)
        await message.reply('–û—Å—Ç–∞–ª–æ—Å—å –µ—â–µ —á—É—Ç—å-—á—É—Ç—å...üôÉ –ò–∑ –∫–∞–∫–æ–≥–æ —Ç—ã –≥–æ—Ä–æ–¥–∞?', reply_markup=types.ReplyKeyboardRemove())
        await Form.city.set()
    elif message.text == '–ñ–µ–Ω—Å–∫–∏–πüë©üèª‚Äçü¶∞':
        await db.change_gender(message.from_user.id, 1)
        await message.reply('–û—Å—Ç–∞–ª–æ—Å—å –µ—â–µ —á—É—Ç—å-—á—É—Ç—å...üôÉ –ò–∑ –∫–∞–∫–æ–≥–æ —Ç—ã –≥–æ—Ä–æ–¥–∞?', reply_markup=types.ReplyKeyboardRemove())
        await Form.city.set()
    else:
        await message.reply('–í—ã–±–µ—Ä–∏ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞')

@dp.message_handler(state=Form.city)
async def get_city(message, state: FSMContext):
    await db.change_city(message.from_user.id, message.text)
    await message.reply('–ü—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω–∏–π –ø—É–Ω–∫—Ç: <b>–∫—Ä–∞—Ç–∫–æ —Ä–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µüòé</b>')
    await Form.bio.set()

@dp.message_handler(state=Form.bio)
async def get_bio(message, state: FSMContext):
    await db.change_bio(message.from_user.id, message.text)

    msg = await message.reply('–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ–∏ —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –≤–∏–¥–µ—Ç—å –¥—Ä—É–≥–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (–º–∞–∫—Å–∏–º—É–º 3)\n|–ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: 0', reply_markup=InlineKeyboardMarkup(resize_keyboard=True).add(InlineKeyboardButton('–ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É', callback_data='cancel_upload')))
    async with state.proxy() as data:
        data['msg'] = msg.message_id
    await Form.images.set()

@dp.message_handler(state=Form.images, content_types=['photo', 'video'])
async def get_images(message, state: FSMContext):
    file_id = ''
    if message.content_type == 'photo':
        file_id = message.photo[-1].file_id
    elif message.content_type == 'video':
        file_id = message.video.file_id
    elif message.content_type == 'video_note':
        file_id = message.video_note.file_id
    
    
    count = await db.check_count_files(message.from_user.id)
    ##print(count)
    await message.delete()
    async with state.proxy() as data:
        if (await db.check_count_files(message.from_user.id)) < 3:
            await db.upload_file(message.from_user.id, file_id, message.content_type)
            try:
                await bot.edit_message_text(chat_id=message.chat.id, message_id=int(data['msg']), text=f"–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ–∏ —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –≤–∏–¥–µ—Ç—å –¥—Ä—É–≥–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (–º–∞–∫—Å–∏–º—É–º 3)\n|–ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {await db.check_count_files(message.from_user.id)}",  reply_markup=InlineKeyboardMarkup(resize_keyboard=True).add(InlineKeyboardButton('–ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É', callback_data='cancel_upload')))
            except:
                pass
        else:
            await bot.delete_message(message.from_user.id, data['msg'])
            anket = await db.get_anket(message.from_user.id)
            media = types.MediaGroup()

            await bot.send_message(message.chat.id, '–°—É–ø–µ—Ä! –¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ –≥–æ—Ç–æ–≤–∞, —Å–µ–π—á–∞—Å –æ–Ω–∞ –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫:', reply_markup=(await render_edit_kb(message.from_user.id)))
            for i in anket['images']:
                if i['file_type'] == 'video':
                    if count == 0:
                        media.attach_video(i['file_id'], caption=f"{anket['user']['name']}, {anket['user']['age']}, {anket['user']['city']}, {anket['user']['college']}.\n{anket['user']['description']}")
                    else:
                        media.attach_video(i['file_id'])
                    
                else:
                    if count == 0:
                        media.attach_photo(i['file_id'], caption=f"{anket['user']['name']}, {anket['user']['age']}, {anket['user']['city']}, {anket['user']['college']}.\n{anket['user']['description']}")
                    else:
                        media.attach_photo(i['file_id'])
                count+=1
            await bot.send_media_group(message.from_user.id, media=media)
            await Form.edit.set()
    
@dp.callback_query_handler(state=Form.images, text='cancel_upload')
async def cancel_upload(callback_query, state: FSMContext):
    if await db.check_count_files(callback_query.from_user.id) < 1:
        await bot.send_message(callback_query.from_user.id, '–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–∏–Ω–∏–º—É–º 1 –º–µ–¥–∏–∞')
    else:
        async with state.proxy() as data:
            await bot.delete_message(callback_query.from_user.id, data['msg'])
            anket = await db.get_anket(callback_query.from_user.id)
            #print(anket)
            media = types.MediaGroup()
            count = 0
            await bot.send_message(callback_query.from_user.id, '–°—É–ø–µ—Ä! –¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ –≥–æ—Ç–æ–≤–∞, —Å–µ–π—á–∞—Å –æ–Ω–∞ –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫:', reply_markup=(await render_edit_kb(callback_query.from_user.id)))
            for i in anket['images']:
                if i['file_type'] == 'video':
                    if count == 0:
                        media.attach_video(i['file_id'], caption=f"{anket['user']['name']}, {anket['user']['age']}, {anket['user']['city']}, {anket['user']['college']}.\n{anket['user']['description']}")
                    else:
                        media.attach_video(i['file_id'])
                    
                else:
                    if count == 0:
                        media.attach_photo(i['file_id'], caption=f"{anket['user']['name']}, {anket['user']['age']}, {anket['user']['city']}, {anket['user']['college']}.\n{anket['user']['description']}")
                    else:
                        media.attach_photo(i['file_id'])
                count+=1
            await bot.send_media_group(callback_query.from_user.id, media=media)
            await Form.edit.set()

@dp.message_handler(state=Form.edit)
async def edit_anket(message, state: FSMContext):
    if message.text == '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å':
        await bot.send_sticker(message.chat.id, "CAACAgIAAxkBAAEZrghmOJszAAFk_yGXz7V5BiVSoPUmXKsAAkUDAAK1cdoGk4gQHIncDRs1BA")
        await message.reply('–ê–Ω–∫–µ—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞! –í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é', reply_markup=main_kb)
        await db.save_anket(message.from_user.id)
        await state.finish()
    elif message.text == '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        kb = InlineKeyboardMarkup()
        kb.add(InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è', callback_data=f'ch_name_{message.from_user.id}'))
        kb.add(InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –≤–æ–∑—Ä–∞—Å—Ç', callback_data=f'ch_age_{message.from_user.id}'))
        kb.add(InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥', callback_data=f'ch_city_{message.from_user.id}'))
        kb.add(InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å —Å—Å—É–∑', callback_data=f'ch_college_{message.from_user.id}'))
        kb.add(InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ', callback_data=f'ch_description_{message.from_user.id}'))
        kb.add(InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏', callback_data=f'ch_image_{message.from_user.id}'))
        await message.reply('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã', reply_markup=kb)
        await state.finish()
    else:
        await message.reply('–í—ã–±–µ—Ä–∏ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞')

@dp.callback_query_handler(text_startswith = 'ch_')
async def change(callback_query, state: FSMContext):
    type_edit = callback_query.data.split('_')[1]
    if type_edit == 'name':
        await bot.edit_message_text(chat_id=callback_query.from_user.id, message_id=callback_query.message.message_id, text='–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è', reply_markup=InlineKeyboardMarkup().add(InlineKeyboardButton('–û—Ç–º–µ–Ω–∞', callback_data='back')))
        await Form.edit_name.set()
    elif type_edit == 'age':
        await bot.edit_message_text(chat_id=callback_query.from_user.id, message_id=callback_query.message.message_id, text='–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤—ã–π –≤–æ–∑—Ä–∞—Å—Ç', reply_markup=InlineKeyboardMarkup().add(InlineKeyboardButton('–û—Ç–º–µ–Ω–∞', callback_data='back')))
        await Form.edit_age.set()

    elif type_edit == 'city':
        await bot.edit_message_text(chat_id=callback_query.from_user.id, message_id=callback_query.message.message_id, text='–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤–æ–µ –≥–æ—Ä–æ–¥', reply_markup=InlineKeyboardMarkup().add(InlineKeyboardButton('–û—Ç–º–µ–Ω–∞', callback_data='back')))
        await Form.edit_city.set()

    elif type_edit == 'college':
        await bot.edit_message_text(chat_id=callback_query.from_user.id, message_id=callback_query.message.message_id, text='–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤–æ–µ –º–µ—Å—Ç–æ –æ–±—É—á–µ–Ω–∏—è', reply_markup=InlineKeyboardMarkup().add(InlineKeyboardButton('–û—Ç–º–µ–Ω–∞', callback_data='back')))
        await Form.edit_college.set()

    elif type_edit == 'description':
        await bot.edit_message_text(chat_id=callback_query.from_user.id, message_id=callback_query.message.message_id, text='–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ', reply_markup=InlineKeyboardMarkup().add(InlineKeyboardButton('–û—Ç–º–µ–Ω–∞', callback_data='back')))
        await Form.edit_description.set()

    elif type_edit == 'image':
        msg = await bot.edit_message_text(chat_id=callback_query.from_user.id, message_id=callback_query.message.message_id, text='–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ–∏ —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –≤–∏–¥–µ—Ç—å –¥—Ä—É–≥–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (–º–∞–∫—Å–∏–º—É–º 3)\n|–ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: 0', reply_markup=InlineKeyboardMarkup(resize_keyboard=True).add(InlineKeyboardButton('–ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É', callback_data='cancel_upload')))
        await db.delete_images(callback_query.from_user.id)
        async with state.proxy() as data:
            data['msg'] = msg.message_id
        await Form.images.set()

@dp.message_handler(state=Form.edit_name)
async def edit_name(message, state: FSMContext):
    await db.change_name(message.from_user.id, message.text)
    await bot.send_message(message.chat.id, '–£—Å–ø–µ—à–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ! –í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é', reply_markup=main_kb)
    await db.save_anket(message.from_user.id)
    await state.finish()
@dp.message_handler(state=Form.edit_age)
async def edit_age(message, state: FSMContext):
    if message.text.isdigit():
        await db.change_age(message.from_user.id, message.text)
        await bot.send_message(message.chat.id, '–£—Å–ø–µ—à–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ! –í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é', reply_markup=main_kb)
        await db.save_anket(message.from_user.id)

        await state.finish()
    else:
        await message.reply('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç —á–∏—Å–ª–æ–º')
@dp.message_handler(state=Form.edit_city)
async def edit_city(message, state: FSMContext):
    await db.change_city(message.from_user.id, message.text)
    await bot.send_message(message.chat.id, '–£—Å–ø–µ—à–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ! –í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é', reply_markup=main_kb)
    await db.save_anket(message.from_user.id)
    await state.finish()

@dp.message_handler(state=Form.edit_college)
async def edit_college(message, state: FSMContext):
    await db.change_college(message.from_user.id, message.text)
    await bot.send_message(message.chat.id, '–£—Å–ø–µ—à–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ! –í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é', reply_markup=main_kb)
    await db.save_anket(message.from_user.id)
    await state.finish()

@dp.message_handler(state=Form.edit_description)
async def edit_bio(message, state: FSMContext):
    await db.change_bio(message.from_user.id, message.text)
    await bot.send_message(message.chat.id, '–£—Å–ø–µ—à–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ! –í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é', reply_markup=main_kb)
    await db.save_anket(message.from_user.id)
    await state.finish()

@dp.message_handler(text="–ú–æ—è –∞–Ω–∫–µ—Ç–∞üë§")
async def my_anket(message):
    anket = await db.get_anket(message.from_user.id)
    media = types.MediaGroup()
    count = 0
    await bot.send_message(message.from_user.id, 'C–µ–π—á–∞—Å —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞ –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫', reply_markup=ReplyKeyboardMarkup(resize_keyboard=True).add(KeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–∫–µ—Ç—É‚úèÔ∏è'), KeyboardButton('–£–¥–∞–ª–∏—Ç—å –∞–Ω–∫–µ—Ç—É‚≠ïÔ∏è')).add(InlineKeyboardButton('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é‚¨ÖÔ∏è')))
    for i in anket['images']:
        if i['file_type'] == 'video':
            if count == 0:
                media.attach_video(i['file_id'], caption=f"{anket['user']['name']}, {anket['user']['age']}, {anket['user']['city']}, {anket['user']['college']}.\n{anket['user']['description']}")
            else:
                media.attach_video(i['file_id'])
            
        else:
            if count == 0:
                media.attach_photo(i['file_id'], caption=f"{anket['user']['name']}, {anket['user']['age']}, {anket['user']['city']}, {anket['user']['college']}.\n{anket['user']['description']}")
            else:
                media.attach_photo(i['file_id'])
        count+=1
    await bot.send_media_group(message.from_user.id, media=media)
    await Form.edit_anket.set()

@dp.message_handler(text="–°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã‚úåÔ∏è")
async def view_ankets(message, state: FSMContext):
    
    await bot.send_sticker(message.chat.id, "CAACAgIAAxkBAAEZtDpmOv-IchOMSw775H63dyOAHnM0yAACTwMAArVx2gZq1OIofocaZDUE", reply_markup=ReplyKeyboardMarkup(resize_keyboard=True).add(KeyboardButton("üëé"), KeyboardButton("üëç")).add(KeyboardButton('–ù–µ —Ö–æ—á—É –±–æ–ª—å—à–µ –Ω–∏–∫–æ–≥–æ –∏—Å–∫–∞—Ç—åüßê')))
    anket = await db.get_random_anket(message.from_user.id)
    async with state.proxy() as data:
        data['direct_id'] = anket
    if (anket) is None:
        await message.reply('–ù–∞ —Å–µ–≥–æ–¥–Ω—è –¥–ª—è —Ç–µ–±—è –Ω–µ—Ç –∞–Ω–∫–µ—Ç', reply_markup=main_kb)
        await state.finish()
    else:
        user = await db.get_anket(anket)
        media = types.MediaGroup()
        count = 0
        for i in user['images']:
            if i['file_type'] == 'video':
                if count == 0:
                    media.attach_video(i['file_id'], caption=f"{user['user']['name']}, {user['user']['age']}, {user['user']['city']}, {user['user']['college']}.\n{user['user']['description']}")
                else:
                    media.attach_video(i['file_id'])
                
            else:
                if count == 0:
                    media.attach_photo(i['file_id'], caption=f"{user['user']['name']}, {user['user']['age']}, {user['user']['city']}, {user['user']['college']}.\n{user['user']['description']}")
                else:
                    media.attach_photo(i['file_id'])
            count+=1
        await bot.send_media_group(message.from_user.id, media=media)
        await Form.get_reaction.set()

@dp.message_handler(state=Form.get_reaction)
async def get_reaction(message, state: FSMContext):
    reaction = 0 #1 –æ—Ç—Ä–∏—Ü–∞–∏—Ç–µ–ª—å–Ω–∞—è —Ä–µ–∞–∫—Ü–∏—è, 2 –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–∞—è, 0 –∏–≥–Ω–æ—Ä
    async with state.proxy() as data:
        if message.text == 'üëé' or message.text == "üëç":
            if message.text == 'üëé':
                reaction = 1
            elif message.text == 'üëç':
                reaction = 2
                await bot.send_message(data['direct_id'], '–¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ –∫–æ–º—É-—Ç–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å, –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∂–Ω–æ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—éüöÄ')
            await db.set_reaction(message.from_user.id, data['direct_id'], reaction=reaction)
            anket = await db.get_random_anket(message.from_user.id)
            async with state.proxy() as data:
                data['direct_id'] = anket
            if (anket) is None:
                await message.reply('–ù–∞ —Å–µ–≥–æ–¥–Ω—è –¥–ª—è —Ç–µ–±—è –Ω–µ—Ç –∞–Ω–∫–µ—Ç', reply_markup=main_kb)
                await state.finish()
            else:
                user = await db.get_anket(anket)
                media = types.MediaGroup()
                count = 0
                for i in user['images']:
                    if i['file_type'] == 'video':
                        if count == 0:
                            media.attach_video(i['file_id'], caption=f"{user['user']['name']}, {user['user']['age']}, {user['user']['city']}, {user['user']['college']}.\n{user['user']['description']}")
                        else:
                            media.attach_video(i['file_id'])
                        
                    else:
                        if count == 0:
                            media.attach_photo(i['file_id'], caption=f"{user['user']['name']}, {user['user']['age']}, {user['user']['city']}, {user['user']['college']}.\n{user['user']['description']}")
                        else:
                            media.attach_photo(i['file_id'])
                    count+=1
                await bot.send_media_group(message.from_user.id, media=media)

        elif message.text == "–ù–µ —Ö–æ—á—É –±–æ–ª—å—à–µ –Ω–∏–∫–æ–≥–æ –∏—Å–∫–∞—Ç—åüßê":
            await bot.send_sticker(message.from_user.id, "CAACAgIAAxkBAAEZrdFmOJAlTWmd4-R-XeeP9_gNeDdlCQACUwMAArVx2gbtH-L5lSdj5DUE", reply_markup=main_kb)
            await bot.send_message(message.from_user.id,'–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é')
            await state.finish()
        else:
            await message.reply('–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é, –≤—ã–±–µ—Ä–∏ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞üëá')

        
    


@dp.message_handler(state=Form.edit_anket)
async def my_anket_edit(message, state: FSMContext):
    if message.text == '–£–¥–∞–ª–∏—Ç—å –∞–Ω–∫–µ—Ç—É‚≠ïÔ∏è':
        #–û—Ç–ø—Ä–∞–≤–∫–∞ –≥—Ä—É—Å—Ç–Ω–æ–≥–æ —Å—Ç–∏–∫–µ—Ä–∞
        await bot.send_sticker(message.from_user.id, "CAACAgIAAxkBAAEZrbpmOIfQHXuQ7e99tYeOliBJlbCnBwACVwMAArVx2ga2e7f7gIXrkjUE", reply_markup=types.ReplyKeyboardRemove())
        await bot.send_message(message.from_user.id, '–í—ã —É–≤–µ—Ä–µ–Ω—ã?', reply_markup=InlineKeyboardMarkup().add(InlineKeyboardButton('–î–∞, —É–¥–∞–ª–∏—Ç—å‚ùå', callback_data="del_ok"), InlineKeyboardButton('–ù–µ—Ç, –æ—Å—Ç–∞–≤–∏—Ç—å‚úÖ', callback_data="del_no")))
        await state.finish()
    elif message.text == '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–∫–µ—Ç—É‚úèÔ∏è':
        await bot.send_sticker(message.from_user.id, "CAACAgIAAxkBAAEZrcBmOIlHscVZwK0fwz4fYJvj779_FQACRAMAArVx2gYMtzsTtIZDMDUE", reply_markup=types.ReplyKeyboardRemove())
        kb = InlineKeyboardMarkup()
        kb.add(InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è', callback_data=f'ch_name_{message.from_user.id}'))
        kb.add(InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –≤–æ–∑—Ä–∞—Å—Ç', callback_data=f'ch_age_{message.from_user.id}'))
        kb.add(InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥', callback_data=f'ch_city_{message.from_user.id}'))
        kb.add(InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å —Å—Å—É–∑', callback_data=f'ch_college_{message.from_user.id}'))
        kb.add(InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ', callback_data=f'ch_description_{message.from_user.id}'))
        kb.add(InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏', callback_data=f'ch_image_{message.from_user.id}'))
        kb.add(InlineKeyboardButton('–ù–∞–∑–∞–¥‚óÄÔ∏è', callback_data='back'))
        await message.reply('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã', reply_markup=kb)
        await state.finish()
    elif message.text == '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é‚¨ÖÔ∏è':
        await bot.send_sticker(message.from_user.id, "CAACAgIAAxkBAAEZrdFmOJAlTWmd4-R-XeeP9_gNeDdlCQACUwMAArVx2gbtH-L5lSdj5DUE", reply_markup=main_kb)
        await bot.send_message(message.from_user.id,'–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é')
        await state.finish()

@dp.callback_query_handler(text="back")
async def back(callback_query):
    await bot.send_sticker(callback_query.from_user.id, "CAACAgIAAxkBAAEZrdFmOJAlTWmd4-R-XeeP9_gNeDdlCQACUwMAArVx2gbtH-L5lSdj5DUE", reply_markup=main_kb)
    await bot.send_message(callback_query.from_user.id,'–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é')

@dp.callback_query_handler(text_startswith = 'del_')
async def delete_account(callback_query):
    #print(callback_query.data)
    if callback_query.data.split('_')[1] == 'ok':
        await callback_query.message.delete()
        await db.delete_anket(callback_query.from_user.id)
        await bot.send_message(callback_query.from_user.id, '–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ —É–¥–∞–ª–µ–Ω–∞, –æ–Ω–∞ –±–æ–ª—å—à–µ –Ω–µ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º. –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–Ω–æ–≤–∞ —Å–æ–∑–¥–∞—Ç—å –∞–Ω–∫–µ—Ç—É, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start')
    else:
        await bot.delete_message(callback_query.from_user.id, (callback_query.message.message_id-1)) 
        await bot.delete_message(callback_query.from_user.id, callback_query.message.message_id )
        await bot.send_message(callback_query.from_user.id, '–í—ã –≤ –≥–ª–∞–Ω–æ–º –º–µ–Ω—é', reply_markup=main_kb)

@dp.message_handler(state=Form.get_answer_reaction)
async def get_answ_reaction(message, state: FSMContext):
    reaction = 0
    if message.text == "üëé":
        reaction = 1
    elif message.text == 'üëç':
        reaction = 2
        async with state.proxy() as data:
            await bot.send_message(message.chat.id, f'–û—Ç–ª–∏—á–Ω–æ! C–≤—è–∑–∞—Ç—å—Å—è —Å —ç—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–ª–µ–º –º–æ–∂–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ: t.me/{await db.get_username(data["first_id"])}', reply_markup=main_kb)
            await bot.send_message(int(data['first_id']), f'–û—Ç–ª–∏—á–Ω–æ! –¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ –æ–±—Ä–µ–ª–∞ –≤–∑–∞–∏–º–Ω–æ—Å—Ç—å, —Å–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –º–æ–∂–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ: t.me/{message.from_user.username}', reply_markup=main_kb)
    async with state.proxy() as data:
        await db.set_direct_reaction(data['first_id'], message.from_user.id, reaction=reaction)
    ankets = await db.get_anket_where_not_ckeck(message.from_user.id)
    io =''
    try:
        io = ankets[0]['first_id']
    except:
        await bot.send_message(message.from_user.id, '–í—ã –≤ –≥–ª–∞–Ω–æ–º –º–µ–Ω—é', reply_markup=main_kb)
        await state.finish()
        
    anket = await db.get_random_anket(io)
    if anket:
        await bot.send_sticker(message.chat.id, "CAACAgIAAxkBAAEZtDpmOv-IchOMSw775H63dyOAHnM0yAACTwMAArVx2gZq1OIofocaZDUE", reply_markup=ReplyKeyboardMarkup(resize_keyboard=True).add(KeyboardButton("üëé"), KeyboardButton("üëç")))
        user = await db.get_anket(anket)
        media = types.MediaGroup()
        count = 0
        
        for i in user['images']:
            if i['file_type'] == 'video':
                if count == 0:
                    media.attach_video(i['file_id'], caption=f"{user['user']['name']}, {user['user']['age']}, {user['user']['city']}, {user['user']['college']}.\n{user['user']['description']}")
                else:
                    media.attach_video(i['file_id'])
                
            else:
                if count == 0:
                    media.attach_photo(i['file_id'], caption=f"{user['user']['name']}, {user['user']['age']}, {user['user']['city']}, {user['user']['college']}.\n{user['user']['description']}")
                else:
                    media.attach_photo(i['file_id'])
            count+=1
        async with state.proxy() as data:
            data['first_id'] = anket[0]['first_id']
        
        await bot.send_media_group(message.from_user.id, media=media)
    else:
        await state.finish()
    

@dp.message_handler(state="*")
async def other_hanlder(message, state: FSMContext):
    if message.text == '–ú–æ–∏ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –∑–∞—è–≤–∫–∏ü§©':
        ankets = await db.get_anket_where_not_ckeck(message.from_user.id)
        print(ankets)
        anket = await db.get_anket(ankets[0]['first_id'])
        if (anket) is None:
            await message.reply('–ù–∞ —Å–µ–≥–æ–¥–Ω—è –¥–ª—è —Ç–µ–±—è –Ω–µ—Ç –∞–Ω–∫–µ—Ç', reply_markup=main_kb)
        else:
            await bot.send_sticker(message.chat.id, "CAACAgIAAxkBAAEZtDpmOv-IchOMSw775H63dyOAHnM0yAACTwMAArVx2gZq1OIofocaZDUE", reply_markup=ReplyKeyboardMarkup(resize_keyboard=True).add(KeyboardButton("üëé"), KeyboardButton("üëç")))
            user = await db.get_anket(anket['user']['user_id'])
            media = types.MediaGroup()
            count = 0
            
            for i in user['images']:
                if i['file_type'] == 'video':
                    if count == 0:
                        media.attach_video(i['file_id'], caption=f"{user['user']['name']}, {user['user']['age']}, {user['user']['city']}, {user['user']['college']}.\n{user['user']['description']}")
                    else:
                        media.attach_video(i['file_id'])
                    
                else:
                    if count == 0:
                        media.attach_photo(i['file_id'], caption=f"{user['user']['name']}, {user['user']['age']}, {user['user']['city']}, {user['user']['college']}.\n{user['user']['description']}")
                    else:
                        media.attach_photo(i['file_id'])
                count+=1
            async with state.proxy() as data:
                data['first_id'] = ankets[0]['first_id']
            
            await bot.send_media_group(message.from_user.id, media=media)
            await Form.get_answer_reaction.set()
            





if __name__ == '__main__':
    executor.start_polling(dp)